/**
 * 	@(#)WorkPlanAction.java   2006-11-9 下午04:49:51
 *	版权所有 沈阳市卓越科技有限公司。 
 *	卓越科技 保留一切权利
 */
package et.bo.oa.workplan.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import et.bo.oa.workplan.service.WorkPlanService;
import et.bo.sys.common.SysStaticParameter;
import et.bo.sys.login.UserInfo;
import excellence.common.classtree.ClassTreeService;
import excellence.common.util.time.TimeUtil;
import excellence.framework.base.action.BaseAction;
import excellence.framework.base.dto.IBaseDTO;
import excellence.framework.base.dto.impl.DynaBeanDTO;

/**
 * @author yifei zhao
 * @version 2006-11-9
 * @see
 */
public class WorkPlanAction extends BaseAction {

	private WorkPlanService wps=null;
	private ClassTreeService cts=null;
	private ClassTreeService depT=null;
	public ClassTreeService getCts() {
		return cts;
	}

	public void setCts(ClassTreeService cts) {
		this.cts = cts;
	}

	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward createPlan(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		IBaseDTO dto=(IBaseDTO)form;
		try
		{
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		dto.set("createUser",ui.getUserName());
		dto.set("createTime",TimeUtil.getNowTimeSr());
		IBaseDTO dto1=wps.createPlan(dto);
		request.setAttribute("WorkPlanBean", dto1);
		request.setAttribute("list",new ArrayList());
		//UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		List planList=wps.getPlanListByUseful(ui.getDep());
		List planDomainList=wps.getPlanDomain(ui);
		List planTimeList=cts.getLabelVaList("planTimeList");
		List planViewList=cts.getLabelVaList("planViewList");
		request.setAttribute("planList", planList);
		request.setAttribute("planDomainList", planDomainList);
		request.setAttribute("planTimeList", planTimeList);
		request.setAttribute("planViewList", planViewList);
		
		return mapping.findForward("planinfo");
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward createMission(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		IBaseDTO dto=(IBaseDTO)form;
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		String type=(String)dto.get("type");
		try
		{
		wps.createMission(dto);
		if("only".equals(type))
			return new ActionForward("/workmission.do?method=mymission");
		String planId=(String)dto.get("planId");
		List list=wps.getMissions(planId);
		IBaseDTO dto1=wps.getPlan(planId);
		request.setAttribute("WorkPlanBean", dto1);
		List planList=wps.getPlanListByUseful(ui.getDep());
		List planDomainList=cts.getLabelVaList("planType");
		List planTimeList=cts.getLabelVaList("planTimeList");
		List planViewList=cts.getLabelVaList("planViewList");
		request.setAttribute("planList", planList);
		request.setAttribute("planDomainList", planDomainList);
		request.setAttribute("planTimeList", planTimeList);
		request.setAttribute("planViewList", planViewList);
		request.setAttribute("listTitle","本计划任务");
		request.setAttribute("list",list);
		
		return mapping.findForward("planinfo");
		
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward updatePlan(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		IBaseDTO dto=(IBaseDTO)form;
		try
		{
		wps.updatePlan(dto);
		String id=(String)dto.get("id");
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		IBaseDTO dto1=wps.getPlan(id);
		request.setAttribute("WorkPlanBean", dto1);
		request.setAttribute("list",new ArrayList());
		List list=wps.getMissions(id);
		List planList=wps.getPlanListByUseful(ui.getDep());
		List planDomainList=wps.getPlanDomain(ui);
		List planTimeList=cts.getLabelVaList("planTimeList");
		List planViewList=cts.getLabelVaList("planViewList");
		request.setAttribute("planList", planList);
		request.setAttribute("planDomainList", planDomainList);
		request.setAttribute("planTimeList", planTimeList);
		request.setAttribute("planViewList", planViewList);
		request.setAttribute("list",list);
		return mapping.findForward("planinfo");
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward updateMission(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		IBaseDTO dto=(IBaseDTO)form;
		try
		{
		wps.updateMission(dto);
		return mapping.findForward("success");
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward delPlan(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		IBaseDTO dto=(IBaseDTO)form;
		try
		{
		wps.delPlan((String)dto.get("id"));
		return mapping.findForward("success");
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward list(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		IBaseDTO dto=(IBaseDTO)form;
		try
		{
		List l=wps.getActionPlan(dto);
		request.setAttribute("list",l);
		return mapping.findForward("list");
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward topPlans(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		//IBaseDTO dto=(IBaseDTO)form;
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		try
		{
		List l=wps.getActionPlan(ui.getUserName());
		request.setAttribute("list",l);
		return mapping.findForward("topPlans");
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward nowMission(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		try
		{
		List l=wps.getMissionsByDate(ui.getUserName());
		request.setAttribute("list",l);
		return mapping.findForward("nowMission");
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward add(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		List planList=wps.getPlanListByUseful(ui.getDep());
		List planDomainList=wps.getPlanDomain(ui);
		List planTimeList=cts.getLabelVaList("planTimeList");
		List planViewList=cts.getLabelVaList("planViewList");
		request.setAttribute("planList", planList);
		request.setAttribute("planDomainList", planDomainList);
		request.setAttribute("planTimeList", planTimeList);
		request.setAttribute("planViewList", planViewList);
		return mapping.findForward("add");
    }
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward addmission(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		String planId=(String)request.getParameter("planId");
		String type=(String)request.getParameter("type");
		IBaseDTO dto=new DynaBeanDTO();
		List depList=null;
		if(planId!=null)
		{
		dto.set("planId",planId);
		depList=wps.getSubDep(planId);
		dto.set("type","plan");
		}
		if("only".equals(type))
		{
			dto.set("type",type);
			depList=new ArrayList();
		}
		
		dto.set("name","任务");
		String name="WorkMissionBean";
		request.setAttribute(name,dto);
		List priTypeList=cts.getLabelVaList("priType");
		List priList=cts.getLabelVaList("pri");
		request.setAttribute("depList", depList);
		request.setAttribute("priTypeList", priTypeList);
		request.setAttribute("priList", priList);
		//request.setAttribute("planViewList", planViewList);
		return mapping.findForward("addMission");
    }
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward changemission(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		String type=request.getParameter("type");
		String missionId=(String)request.getParameter("id");
		IBaseDTO dto=wps.getMission(missionId);
		request.setAttribute(mapping.getName(),dto);
		dto.set("type",type);
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		List depList=wps.getSubDep((String)dto.get("planId"));
		List priTypeList=cts.getLabelVaList("priType");
		List priList=cts.getLabelVaList("pri");
		//List planViewList=cts.getLabelVaList("planViewList");
		request.setAttribute("depList", depList);
		request.setAttribute("priTypeList", priTypeList);
		request.setAttribute("priList", priList);
		return mapping.findForward("updateMission");
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward changemissionlist(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		//IBaseDTO dto=(IBaseDTO)form;
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		try
		{
		
		String planId=(String)request.getParameter("planId");
		List list=wps.getParentMissions(planId);
		IBaseDTO dto1=wps.getPlan(planId);
		request.setAttribute("WorkPlanBean", dto1);
		List planList=wps.getPlanListByUseful(ui.getDep());
		List planDomainList=cts.getLabelVaList("planType");
		List planTimeList=cts.getLabelVaList("planTimeList");
		List planViewList=cts.getLabelVaList("planViewList");
		request.setAttribute("planList", planList);
		request.setAttribute("planDomainList", planDomainList);
		request.setAttribute("planTimeList", planTimeList);
		request.setAttribute("planViewList", planViewList);
		request.setAttribute("listTitle","上级计划任务");
		request.setAttribute("list",list);
		
		return mapping.findForward("planinfo");
		
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward mymission(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		//IBaseDTO dto=(IBaseDTO)form;
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		try
		{
		
		List list=wps.getMyMission(ui);
		
		request.setAttribute("list",list);
		
		return mapping.findForward("mymissionlist");
		
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward myplan(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		//IBaseDTO dto=(IBaseDTO)form;
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		try
		{
		
		List list=wps.getMyPlan(ui);
		
		request.setAttribute("list",list);
		
		return mapping.findForward("myplanlist");
		
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward planInfo(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		String id=request.getParameter("id");
		try
		{
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		IBaseDTO dto1=wps.getPlan(id);
		request.setAttribute("WorkPlanBean", dto1);
		request.setAttribute("list",new ArrayList());
		List list=wps.getMissions(id);
		List planList=wps.getPlanListByUseful(ui.getDep());
		List planDomainList=wps.getPlanDomain(ui);
		List planTimeList=cts.getLabelVaList("planTimeList");
		List planViewList=cts.getLabelVaList("planViewList");
		request.setAttribute("planList", planList);
		request.setAttribute("planDomainList", planDomainList);
		request.setAttribute("planTimeList", planTimeList);
		request.setAttribute("planViewList", planViewList);
		request.setAttribute("list",list);
		return mapping.findForward("planinfo");
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward subPlan(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		//IBaseDTO dto=(IBaseDTO)form;
		String id=request.getParameter("id");
		UserInfo ui=(UserInfo)request.getSession().getAttribute(SysStaticParameter.USER_IN_SESSION);
		try
		{
		
		List list=wps.getSubPlan(id);
		
		request.setAttribute("list",list);
		
		return mapping.findForward("myplanlist");
		
		}catch(Exception e)
		{
			return mapping.findForward("error");
		}
    }
	/**
	 * 
	 * @param
	 * @version 2006-11-9
	 * @return
	 */
	public ActionForward query(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)
            throws Exception 
    {
		return mapping.findForward("query");
    }

	public WorkPlanService getWps() {
		return wps;
	}

	public void setWps(WorkPlanService wps) {
		this.wps = wps;
	}

	public ClassTreeService getDepT() {
		return depT;
	}

	public void setDepT(ClassTreeService depT) {
		this.depT = depT;
	}
}
